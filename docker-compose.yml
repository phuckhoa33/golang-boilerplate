services:
  echo_app:
    container_name: golang-boilerplate
    build: 
      context: .
      dockerfile: ./Golang.Dockerfile
    ports:
      - 8888:8888
    restart: on-failure
    volumes:
      - ./:/app/
    depends_on:
      - echo_pg
    env_file:
      - .env
    environment:
      - DB_CONNECTION=${DATABASE_HOST}
      - WAIT_HOSTS=${DATABASE_HOST}
      - WAIT_BEFORE_HOSTS=15
      - WAIT_SLEEP_INTERVAL=3
    networks:
      - echo-demo-stack

  echo_pg:
    image: postgres:13.2
    container_name: echo_db
    ports:
      - 5432:5432
    environment:
      - POSTGRES_ROOT_HOST=${DATABASE_HOST}
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_DATABASE=${DATABASE_NAME}
      - POSTGRES_ROOT_PASSWORD=${DATABASE_PASSWORD}
    volumes:
      - database_pg:/var/lib/pg
    networks:
      - echo-demo-stack

volumes:
  database_pg:

networks:
  echo-demo-stack:
    driver: bridge